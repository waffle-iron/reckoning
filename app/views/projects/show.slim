- content_for :title do
  = project.name
.row#show-project
  .col-xs-12.col-md-12
    .row
      .col-xs-12.col-md-7
        h1
          = project.name
      .col-xs-12.col-md-5
        .btn-group.btn-group-justified-responsive.pull-right.resource-nav
          = link_to I18n.t(:"nav.subnav.back"), projects_path, class: "btn btn-default"
          a.btn.btn-primary href=edit_project_path(project)
            i.fa.fa-edit
            '
            span.hidden-xs.hidden-sm.hidden-md= I18n.t(:"actions.edit")
    .row
      .col-xs-12.col-md-12
        javascript:
          window.projectBudgetChartData = #{{@project_budget_chart_data.to_json}};
        .panel.panel-default
          .panel-heading
            .panel-title
              strong= I18n.t(:"labels.panels.charts.project_budget")
          .panel-body
            .chart.chart-big#project-budget-chart
            .row
              .col-xs-12.panel-progress
                .progress.progress-slim.text-center
                  .progress-bar class=budget_progress(project.budget_percent) role="progressbar" aria-valuemin="0" aria-valuemax="100" style="width: #{project.budget_percent}%"
            .row
              .col-xs-6.col-md-3.panel-box.panel-box-bottom
                h2 Erfasste Stunden
                .highlight
                  = number_to_currency(project.timer_values, unit: "h", precision: 2)
                .subline
                  a href="#{timesheet_path(project_uuid: project)}/#/day/#{I18n.l(Time.zone.now.to_date, format: :db)}/new"
                    i.fa.fa-clock-o
                    '
                    = I18n.t(:"actions.add_timer")
              .col-xs-6.col-md-3.panel-box.panel-box-bottom
                h2 Verbleibende Stunden
                - if project.budget_hours.present? && !project.budget_hours.zero?
                  .highlight
                    = number_to_currency((project.budget_hours - project.timer_values_billable), unit: "h", precision: 2)
                - else
                  .highlight.blank
                    = I18n.t(:"labels.defaults.na")
                .subline
                  - if project.budget_hours.present? && !project.budget_hours.zero?
                    .row
                      .col-xs-4.text-left Gesamt
                      .col-xs-8.text-right= number_to_currency(project.budget_hours, unit: "h", precision: 2)
              .col-xs-6.col-md-3.panel-box.panel-box-bottom
                h2 Verbleibendes Budget
                - if project.budget.present? && !project.budget.zero?
                  .highlight
                    = number_to_currency (project.budget - project.invoice_values)
                - else
                  .highlight.blank
                    = I18n.t(:"labels.defaults.na")
                .subline
                  - if project.budget.present? && !project.budget.zero?
                    .row
                      .col-xs-4.text-left Gesamt
                      .col-xs-8.text-right= number_to_currency(project.budget)
              .col-xs-6.col-md-3.panel-box.panel-box-bottom
                h2 Offener Betrag
                - if project.rate.present?
                  .highlight
                    = number_to_currency project.timer_values_uninvoiced * project.rate
                - else
                  .highlight.blank
                    = I18n.t(:"labels.defaults.na")
                .subline
                  a href=new_invoice_path(project_uuid: project)
                    i.fa.fa-plus
                    '
                    = I18n.t(:"actions.add_invoice")
    .row
      .col-xs-12.col-md-12
    .row
      .col-xs-12.col-md-12.nav-tabs-list.nav-tabs-full-width
        ul.nav.nav-tabs role="tablist"
          li.active
            a href="#timers" role="tab" data-toggle="tab"
              = I18n.t(:"labels.defaults.timers")
          li
            a href="#invoices" role="tab" data-toggle="tab"
              = I18n.t(:"labels.defaults.invoices")
          li
            a href="#tasks" role="tab" data-toggle="tab"
              = I18n.t(:"labels.defaults.tasks")
        .tab-content
          .tab-pane.active#timers
            = render "timers_panel", timers: project.timers.includes(:task), context: "default"
          .tab-pane#invoices
            = render "base/invoices_panel", invoices: project.invoices, context: "default"
          .tab-pane#tasks
            = render "tasks_panel", tasks: project.tasks, context: "default"
